 STRING QUESTIONS



  1. Reverse a String
  Example: reverseString("hello") → "olleh"

function reverseString(str) {
  return str.split('').reverse().join('');
}


  2. Check Palindrome (case-insensitive)
  Example: isPalindrome("Madam") → true
 
function isPalindrome(str) {
  const cleaned = str.toLowerCase();
  return cleaned === cleaned.split('').reverse().join('');
}


 3. Count Vowels
  Example: countVowels("JavaScript") → 3
 
function countVowels(str) {
  const vowels = 'aeiouAEIOU';
  let count = 0;
  for (let char of str) {
    if (vowels.includes(char)) count++;
  }
  return count;
}


4. Capitalize First Letter of Each Word
Example: capitalizeWords("hello world") → "Hello World"

function capitalizeWords(str) {
  return str
    .split(' ')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
}


 5. Character Frequency
 Example: charFrequency("aabbbc") → { a: 2, b: 3, c: 1 }

function charFrequency(str) {
  const freq = {};
  for (let char of str) {
    freq[char] = (freq[char] || 0) + 1;
  }
  return freq;
}


 ARRAY QUESTIONS



  1. Remove Duplicates
  Example: removeDuplicates([1, 2, 2, 3, 4, 4]) → [1, 2, 3, 4]

function removeDuplicates(arr) {
  return [...new Set(arr)];
}


  2. Flatten an Array (1 level deep)
  Example: flattenArray([[1, 2], [3, 4], [5]]) → [1, 2, 3, 4, 5]
 
function flattenArray(arr) {
  return arr.flat();
}


  3. Find Max and Min
 Example: findMaxMin([4, 1, 9, -2]) → { max: 9, min: -2 }

function findMaxMin(arr) {
  return {
    max: Math.max(...arr),
    min: Math.min(...arr),
  };
}


  4. Sum of Even Numbers
  Example: sumEven([1, 2, 3, 4, 5, 6]) → 12

function sumEven(arr) {
  return arr.reduce((sum, num) => (num % 2 === 0 ? sum + num : sum), 0);
}


  5. Group by Type
  Example: groupByType([1, 'a', true, 2, 'b']) → { number: [1, 2], string: ['a', 'b'], boolean: [true] }
 
function groupByType(arr) {
  const grouped = {};
  for (let item of arr) {
    const type = typeof item;
    if (!grouped[type]) {
      grouped[type] = [];
    }
    grouped[type].push(item);
  }
  return grouped;
}
